# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .LiquidSignTxInput import LiquidSignTxInput
from .LiquidSignTxOutput import LiquidSignTxOutput

if __debug__:
    try:
        from typing import List
    except ImportError:
        List = None  # type: ignore


class LiquidSignTx(p.MessageType):
    MESSAGE_WIRE_TYPE = 807

    def __init__(
        self,
        version: int = None,
        inputs: List[LiquidSignTxInput] = None,
        outputs: List[LiquidSignTxOutput] = None,
        lock_time: int = None,
        hash_type: int = None,
    ) -> None:
        self.version = version
        self.inputs = inputs if inputs is not None else []
        self.outputs = outputs if outputs is not None else []
        self.lock_time = lock_time
        self.hash_type = hash_type

    @classmethod
    def get_fields(cls):
        return {
            1: ('version', p.UVarintType, 0),
            2: ('inputs', LiquidSignTxInput, p.FLAG_REPEATED),
            3: ('outputs', LiquidSignTxOutput, p.FLAG_REPEATED),
            4: ('lock_time', p.UVarintType, 0),
            5: ('hash_type', p.UVarintType, 0),
        }
